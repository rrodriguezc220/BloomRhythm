// <auto-generated />
using System;
using HackathonBloomWatch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace HackathonBloomWatch.Migrations
{
    [DbContext(typeof(HackathonBWContext))]
    [Migration("20251005212723_InitialWithDecimalFix")]
    partial class InitialWithDecimalFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HackathonBloomWatch.Models.Campania", b =>
                {
                    b.Property<int>("IdCampania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCampania"));

                    b.Property<string>("AnioCampania")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("FechaProceso")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCampania")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCampania");

                    b.ToTable("Campania");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.CampaniaDetalle", b =>
                {
                    b.Property<int>("IdCampaniaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCampaniaDetalle"));

                    b.Property<decimal?>("Agroforestal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CantidadElementos")
                        .HasColumnType("int");

                    b.Property<string>("EstadoActividad")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("FechaActividad")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCampania")
                        .HasColumnType("int");

                    b.Property<int>("IdEspeciePlanta")
                        .HasColumnType("int");

                    b.Property<int>("IdMacizoForestal")
                        .HasColumnType("int");

                    b.Property<int?>("MortandadPlantas")
                        .HasColumnType("int");

                    b.Property<string>("TipoActividad")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("ValorMacizoForestal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCampaniaDetalle");

                    b.HasIndex("IdCampania");

                    b.HasIndex("IdEspeciePlanta");

                    b.HasIndex("IdMacizoForestal");

                    b.ToTable("CampaniaDetalle");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.EspeciePlanta", b =>
                {
                    b.Property<int>("IdEspeciePlanta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspeciePlanta"));

                    b.Property<byte[]>("ImagenEspecie")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombreComun")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreEspecie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEspeciePlanta");

                    b.ToTable("EspeciePlanta");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.MacizoForestal", b =>
                {
                    b.Property<int>("IdMacizoForestal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMacizoForestal"));

                    b.Property<decimal?>("AreaHectareas")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("CoordenadaEste")
                        .HasColumnType("decimal(12,6)");

                    b.Property<decimal?>("CoordenadaNorte")
                        .HasColumnType("decimal(12,6)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Distrito")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<Geometry>("Geometria")
                        .HasColumnType("geography");

                    b.Property<string>("Localidad")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("IdMacizoForestal");

                    b.ToTable("MacizoForestal");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.CampaniaDetalle", b =>
                {
                    b.HasOne("HackathonBloomWatch.Models.Campania", "Campania")
                        .WithMany("CampaniaDetalles")
                        .HasForeignKey("IdCampania")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackathonBloomWatch.Models.EspeciePlanta", "EspeciePlanta")
                        .WithMany("CampaniaDetalles")
                        .HasForeignKey("IdEspeciePlanta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackathonBloomWatch.Models.MacizoForestal", "MacizoForestal")
                        .WithMany("CampaniaDetalles")
                        .HasForeignKey("IdMacizoForestal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campania");

                    b.Navigation("EspeciePlanta");

                    b.Navigation("MacizoForestal");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.Campania", b =>
                {
                    b.Navigation("CampaniaDetalles");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.EspeciePlanta", b =>
                {
                    b.Navigation("CampaniaDetalles");
                });

            modelBuilder.Entity("HackathonBloomWatch.Models.MacizoForestal", b =>
                {
                    b.Navigation("CampaniaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
