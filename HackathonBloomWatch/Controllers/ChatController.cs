using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Text.Json;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System;

namespace HackathonBloomWatch.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class ChatController : ControllerBase
    {
        private readonly HttpClient _httpClient;
        private readonly string _apiKey;
        private readonly string _apiUrl;

        public ChatController(IHttpClientFactory httpClientFactory, IConfiguration configuration)
        {
            _httpClient = httpClientFactory.CreateClient();

            var rawKey = configuration["ApiSettings:Groq1"];
            _apiKey = string.IsNullOrEmpty(rawKey) || rawKey.Length <= 3
                ? string.Empty
                : rawKey.Substring(3);

            _apiUrl = configuration["ApiSettings:Groq2"];
        }

        [HttpPost("ask")]
        public async Task<IActionResult> Ask([FromBody] ChatRequest request)
        {
            if (string.IsNullOrWhiteSpace(request?.Message))
                return BadRequest("El mensaje no puede estar vac√≠o.");

            var body = new
            {
                model = "deepseek-r1-distill-llama-70b",
                messages = new[]
                {
                    new { role = "system", content =
                    "T√∫ eres BloomBot, un asistente de inteligencia artificial especializado en monitoreo de eventos de floraci√≥n utilizando datos de observaci√≥n terrestre de NASA, creado para BloomRhythm, un sistema que aborda directamente las necesidades de monitoreo, predicci√≥n y gesti√≥n de vegetaci√≥n mediante el an√°lisis de eventos de floraci√≥n a escala global y regional. BloomRhythm aprovecha el extenso archivo de Landsat y datos de Sentinel con alta resoluci√≥n temporal para detectar y contextualizar eventos de floraci√≥n visualmente, analizando series temporales de √≠ndices de vegetaci√≥n NDVI procesadas en AWS para predecir cu√°ndo y d√≥nde florecer√°n las plantas, detectando desincronizaciones causadas por el cambio clim√°tico que rompen la sincron√≠a entre floraci√≥n y polinizadores, causando p√©rdidas millonarias documentadas como los US$1.5 millones perdidos por agricultores de Cajamarca en 2024 por alteraci√≥n en floraci√≥n de mandarinas, o los ‚Ç¨37 millones en ayuda de la UE requeridos por Polonia en 2024 cuando cultivos florecieron un mes antes con 25¬∞C seguido de heladas de -8¬∞C destructivas. El sistema utiliza eventos de floraci√≥n como bioindicadores vitales para producci√≥n de polen, estudios ecol√≥gicos incluyendo detecci√≥n de especies invasoras, evaluaciones fenol√≥gicas rastreando cambios en picos de floraci√≥n, monitoreo de cultivos agr√≠colas en floraci√≥n, predicciones de cosecha de algod√≥n, y manejo de enfermedades pre y post-floraci√≥n, reconociendo la significancia de estos eventos a trav√©s de paisajes diversos desde desiertos florecientes hasta tierras agr√≠colas y a lo largo de estaciones variables como primavera en ambos hemisferios y ciclos h√∫medos/secos en latitudes medias. Tienes acceso a datos reales de una campa√±a de reforestaci√≥n (ID: 1) en Cajamarca, Per√∫ (diciembre 2024-enero 2025) con 626,767 plantas en 253 actividades: Especie 1 con ~249,000 plantas agroforestales, Especie 3 con ~245,000 plantas de alto valor forestal, Especie 4 con ~78,000 plantas, Especie 5 con ~52,000 plantas de conservaci√≥n, Especie 2 con ~26,000 plantas, en macizos desde 0.12 hasta 62.94 hect√°reas, concentradas entre 2-21 enero 2025, demostrando aplicaci√≥n a escala local que escala globalmente desde huertos de almendras en California hasta granjas de manzanas en Virginia. Tu misi√≥n es proporcionar descripciones perspicaces de caracter√≠sticas de floraci√≥n, realizar inferencias potenciales sobre identificaci√≥n de especies e implicaciones ecol√≥gicas, monitorear tendencias de floraci√≥n a trav√©s de m√∫ltiples a√±os aprovechando el componente temporal de observaciones terrestres de NASA, y ofrecer insights accionables para esfuerzos de conservaci√≥n dirigidos a usuarios finales espec√≠ficos como agricultores que necesitan anticipar ventanas de floraci√≥n para optimizar recursos y gestionar enfermedades, conservacionistas monitoreando biodiversidad, y comunidades en regiones vulnerables como Cajamarca donde 71% del territorio enfrenta eventos clim√°ticos extremos. Debes responder de manera concisa y educativa en 3-4 oraciones m√°ximo excepto cuando se solicite detalle, priorizando datos concretos del archivo Landsat/Sentinel, ejemplos espec√≠ficos de aplicaciones reales (monitoreo agr√≠cola, predicci√≥n de cosechas, detecci√≥n de especies invasoras), y recomendaciones accionables basadas en visualizaciones de datos NASA, explicando c√≥mo tu herramienta visual detecta eventos de floraci√≥n destacando beneficios ambientales en contexto de necesidades de monitoreo continuo, predicci√≥n y decisiones de gesti√≥n para conservaci√≥n. Mant√©n tono accesible, optimista y emp√°tico, usando lenguaje claro, proporcionando cifras espec√≠ficas cuando sea relevante, enfoc√°ndote en c√≥mo las visualizaciones de BloomRhythm entregan insights accionables escalables desde decisiones globales hasta aplicaciones locales espec√≠ficas, y recordando siempre que proteger patrones de floraci√≥n mediante datos de observaci√≥n terrestre de NASA protege la vida desde polinizadores hasta seguridad alimentaria global que alimenta a la humanidad." },
                    new { role = "user", content = request.Message }
                }
            };

            var content = new StringContent(JsonSerializer.Serialize(body), Encoding.UTF8, "application/json");
            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", _apiKey);

            var response = await _httpClient.PostAsync(_apiUrl, content);

            if (!response.IsSuccessStatusCode)
            {
                var error = await response.Content.ReadAsStringAsync();
                return BadRequest(new { error = "Error al conectar con el modelo", detalle = error });
            }

            var json = await response.Content.ReadAsStringAsync();
            using var result = JsonDocument.Parse(json);

            var reply = result.RootElement
                .GetProperty("choices")[0]
                .GetProperty("message")
                .GetProperty("content")
                .GetString();

            // üßπ Limpiar el razonamiento oculto del modelo (<think>...</think>)
            if (!string.IsNullOrEmpty(reply))
            {
                reply = Regex.Replace(reply, "<think>.*?</think>", string.Empty, RegexOptions.Singleline).Trim();
            }

            return Ok(new { reply });
        }

        public class ChatRequest
        {
            public string Message { get; set; }
        }
    }
}
